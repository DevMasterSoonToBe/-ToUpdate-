// <auto-generated />
using System;
using AlausDaryklosGamybosValdymoSistema.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlausDaryklosGamybosValdymoSistema.Migrations
{
    [DbContext(typeof(Alaus_daryklos_gamybos_valdymas_DBContext))]
    partial class Alaus_daryklos_gamybos_valdymas_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.GamybosInstrukcija", b =>
                {
                    b.Property<decimal>("KlientoUzsakymoId")
                        .HasColumnName("KlientoUzsakymoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<decimal>("InstrukcijosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InstrukcijosID")
                        .HasColumnType("numeric(6, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandinimoLaikas")
                        .HasColumnName("Brandinimo laikas")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Busena")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<DateTime>("GamybosTerminas")
                        .HasColumnType("datetime");

                    b.Property<string>("RecepturaParuosta")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("TechnikosPatarimaiParuosti")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.HasKey("KlientoUzsakymoId", "InstrukcijosId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("KlientoUzsakymoId")
                        .IsUnique()
                        .HasName("TURI_FK");

                    b.ToTable("GamybosInstrukcija");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.Ingredientas", b =>
                {
                    b.Property<decimal>("IngredientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IngredientoID")
                        .HasColumnType("numeric(6, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("FormosId")
                        .HasColumnName("FormosID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<string>("IngredientoPavadinimas")
                        .IsRequired()
                        .HasColumnName("Ingrediento pavadinimas")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double?>("LaisvasKiekis");

                    b.HasKey("IngredientoId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("FormosId")
                        .HasName("RELATIONSHIP_24_FK");

                    b.ToTable("Ingredientas");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.IngredientoPrasymas", b =>
                {
                    b.Property<decimal>("KlientoUzsakymoId")
                        .HasColumnName("KlientoUzsakymoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<decimal>("IngredientoId")
                        .HasColumnName("IngredientoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<string>("Busena")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<double>("IngredientoKiekis")
                        .HasColumnName("Ingrediento kiekis");

                    b.HasKey("KlientoUzsakymoId", "IngredientoId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("IngredientoId")
                        .HasName("TURI9_FK");

                    b.HasIndex("KlientoUzsakymoId")
                        .HasName("TURI8_FK");

                    b.ToTable("IngredientoPrasymas");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.IngredientoReceptas", b =>
                {
                    b.Property<decimal>("KlientoUzsakymoId")
                        .HasColumnName("KlientoUzsakymoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<decimal>("InstrukcijosId")
                        .HasColumnName("InstrukcijosID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<decimal>("IngredientoId")
                        .HasColumnName("IngredientoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<string>("FermentacijosLaikas")
                        .HasColumnName("Fermentacijos laikas")
                        .HasMaxLength(50);

                    b.Property<double>("IngredientoKiekis")
                        .HasColumnName("Ingrediento kiekis");

                    b.Property<string>("VirimoLaikas")
                        .HasColumnName("Virimo laikas")
                        .HasMaxLength(50);

                    b.HasKey("KlientoUzsakymoId", "InstrukcijosId", "IngredientoId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("IngredientoId")
                        .HasName("TURI6_FK");

                    b.HasIndex("KlientoUzsakymoId", "InstrukcijosId")
                        .HasName("TURI7_FK");

                    b.ToTable("IngredientoReceptas");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.Klientas", b =>
                {
                    b.Property<decimal>("KlientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KlientoID")
                        .HasColumnType("numeric(6, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KlientoPavadinimas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("KlientoId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Klientas");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.KlientoUzsakymoAplankas", b =>
                {
                    b.Property<decimal>("KlientoUzsakymoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KlientoUzsakymoID")
                        .HasColumnType("numeric(6, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Archyvavimo_Komentaras")
                        .HasMaxLength(500);

                    b.Property<string>("Busena")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<decimal>("KlientoId")
                        .HasColumnName("KlientoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<DateTime>("Terminas")
                        .HasColumnType("datetime");

                    b.HasKey("KlientoUzsakymoId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("KlientoId")
                        .HasName("TURI15_FK");

                    b.ToTable("KlientoUzsakymoAplankas");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.LaisviResursai", b =>
                {
                    b.Property<decimal>("FormosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FormosID")
                        .HasColumnType("numeric(6, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LaisvuResursuKodas")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("ResursoPavadinimas")
                        .IsRequired()
                        .HasColumnName("ResursoPavadinimas")
                        .HasMaxLength(50);

                    b.HasKey("FormosId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("LaisviResursai");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.Pareigybe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.Property<string>("role");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.ResursaiUzsakymui", b =>
                {
                    b.Property<decimal>("KlientoUzsakymoId")
                        .HasColumnName("KlientoUzsakymoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<decimal>("FormosId")
                        .HasColumnName("FormosID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<string>("LaisvuResursuTipas")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.HasKey("KlientoUzsakymoId", "FormosId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("FormosId")
                        .HasName("index_FormosTuri");

                    b.HasIndex("KlientoUzsakymoId")
                        .HasName("index_KlientoUzsakymoTuri");

                    b.ToTable("LaisviResursaiUzsakymui");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.Sutartis", b =>
                {
                    b.Property<decimal>("SutartiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SutartiesID")
                        .HasColumnType("numeric(6, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("KlientoId")
                        .HasColumnName("KlientoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<decimal?>("KlientoUzsakymoId")
                        .HasColumnName("KlientoUzsakymoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<DateTime>("SutartiesPasirasymoData")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SutartiesTerminas")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TiekejoId")
                        .HasColumnName("TiekejoID")
                        .HasColumnType("numeric(6, 0)");

                    b.HasKey("SutartiesId");

                    b.HasIndex("KlientoId")
                        .HasName("TURI13_FK");

                    b.HasIndex("KlientoUzsakymoId")
                        .IsUnique()
                        .HasName("TURI14_FK")
                        .HasFilter("[KlientoUzsakymoID] IS NOT NULL");

                    b.HasIndex("TiekejoId")
                        .HasName("TURI12_FK");

                    b.ToTable("Sutartis");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.TechnikosPrietaisas", b =>
                {
                    b.Property<decimal>("TechnikosPrietaisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TechnikosPrietaisoID")
                        .HasColumnType("numeric(6, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("FormosId")
                        .HasColumnName("FormosID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<double?>("LaisvasKiekis");

                    b.Property<string>("PrietaisoPavadinimas")
                        .IsRequired()
                        .HasColumnName("Prietaiso pavadinimas")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("TechnikosPrietaisoId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("FormosId")
                        .HasName("TURI55_FK");

                    b.ToTable("TechnikosPrietaisas");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.TechnikosPrietaisoPatarimas", b =>
                {
                    b.Property<decimal>("TechnikosPrietaisoId")
                        .HasColumnName("TechnikosPrietaisoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<decimal>("KlientoUzsakymoId")
                        .HasColumnName("KlientoUzsakymoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<decimal>("InstrukcijosId")
                        .HasColumnName("InstrukcijosID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<double>("PrietaisoKiekis")
                        .HasColumnName("PrietaisoKiekis");

                    b.Property<string>("PrietaisoKomentaras")
                        .HasColumnName("Prietaiso komentaras")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.HasKey("TechnikosPrietaisoId", "KlientoUzsakymoId", "InstrukcijosId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("TechnikosPrietaisoId")
                        .HasName("TURI5_FK");

                    b.HasIndex("KlientoUzsakymoId", "InstrukcijosId")
                        .HasName("TURI4_FK");

                    b.ToTable("Technikos prietaiso patarimas");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.TechnikosPrietaisoPrasymas", b =>
                {
                    b.Property<decimal>("KlientoUzsakymoId")
                        .HasColumnName("KlientoUzsakymoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<decimal>("TechnikosPrietaisoId")
                        .HasColumnName("TechnikosPrietaisoID")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<string>("Busena")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<double>("PrietaisoKiekis")
                        .HasColumnName("Prietaiso kiekis");

                    b.HasKey("KlientoUzsakymoId", "TechnikosPrietaisoId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("KlientoUzsakymoId")
                        .HasName("TURI11_FK");

                    b.HasIndex("TechnikosPrietaisoId")
                        .HasName("TURI10_FK");

                    b.ToTable("Technikos prietaiso prasymas");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.Tiekejas", b =>
                {
                    b.Property<decimal>("TiekejoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TiekejoID")
                        .HasColumnType("numeric(6, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TiekejoPavadinimas")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("TiekejoTtipas")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.HasKey("TiekejoId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Tiekejas");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.Vartotojas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Pavarde");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<string>("Vardas");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<Guid>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.GamybosInstrukcija", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.KlientoUzsakymoAplankas", "KlientoUzsakymo")
                        .WithOne("GamybosInstrukcija")
                        .HasForeignKey("AlausDaryklosGamybosValdymoSistema.Models.GamybosInstrukcija", "KlientoUzsakymoId")
                        .HasConstraintName("FK_GAMYBOSI_TURI_KLIENTOU");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.Ingredientas", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.LaisviResursai", "Formos")
                        .WithMany("Ingredientas")
                        .HasForeignKey("FormosId")
                        .HasConstraintName("FK_INGREDIE_RELATIONS_LAISVIRE");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.IngredientoPrasymas", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.Ingredientas", "Ingrediento")
                        .WithMany("IngredientoPrasymas")
                        .HasForeignKey("IngredientoId")
                        .HasConstraintName("FK_INGREDIE_TURI9_INGREDIE");

                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.KlientoUzsakymoAplankas", "KlientoUzsakymo")
                        .WithMany("IngredientoPrasymas")
                        .HasForeignKey("KlientoUzsakymoId")
                        .HasConstraintName("FK_INGREDIE_TURI8_KLIENTOU");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.IngredientoReceptas", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.Ingredientas", "Ingrediento")
                        .WithMany("IngredientoReceptas")
                        .HasForeignKey("IngredientoId")
                        .HasConstraintName("FK_INGREDIE_TURI6_INGREDIE");

                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.GamybosInstrukcija", "GamybosInstrukcija")
                        .WithMany("IngredientoReceptas")
                        .HasForeignKey("KlientoUzsakymoId", "InstrukcijosId")
                        .HasConstraintName("FK_INGREDIE_TURI7_GAMYBOSI");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.KlientoUzsakymoAplankas", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.Klientas", "Kliento")
                        .WithMany("KlientoUzsakymoAplankas")
                        .HasForeignKey("KlientoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.ResursaiUzsakymui", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.LaisviResursai", "ResursaiLaisvi")
                        .WithMany("LaisviResursaiUzsakymui")
                        .HasForeignKey("FormosId")
                        .HasConstraintName("FK__LaisviRes__Formo__13BCEBC1");

                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.KlientoUzsakymoAplankas", "UzsakymasKliento")
                        .WithMany("LaisviResursaiUzsakymui")
                        .HasForeignKey("KlientoUzsakymoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.Sutartis", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.Klientas", "Kliento")
                        .WithMany("Sutartis")
                        .HasForeignKey("KlientoId")
                        .HasConstraintName("FK_SUTARTIS_TURI13_KLIENTAS");

                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.KlientoUzsakymoAplankas", "KlientoUzsakymo")
                        .WithOne("Sutartis")
                        .HasForeignKey("AlausDaryklosGamybosValdymoSistema.Models.Sutartis", "KlientoUzsakymoId")
                        .HasConstraintName("FK_SUTARTIS_TURI14_KLIENTOU");

                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.Tiekejas", "Tiekejo")
                        .WithMany("Sutartis")
                        .HasForeignKey("TiekejoId")
                        .HasConstraintName("FK_SUTARTIS_TURI12_TIEKEJAS");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.TechnikosPrietaisas", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.LaisviResursai", "Formos")
                        .WithMany("TechnikosPrietaisas")
                        .HasForeignKey("FormosId")
                        .HasConstraintName("FK_TECHNIKO_TURI55_LAISVIRE");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.TechnikosPrietaisoPatarimas", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.TechnikosPrietaisas", "TechnikosPrietaiso")
                        .WithMany("TechnikosPrietaisoPatarimas")
                        .HasForeignKey("TechnikosPrietaisoId")
                        .HasConstraintName("FK_TECHNIKO_TURI5_TECHNIKO");

                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.GamybosInstrukcija", "GamybosInstrukcija")
                        .WithMany("TechnikosPrietaisoPatarimas")
                        .HasForeignKey("KlientoUzsakymoId", "InstrukcijosId")
                        .HasConstraintName("FK_TECHNIKO_TURI4_GAMYBOSI");
                });

            modelBuilder.Entity("AlausDaryklosGamybosValdymoSistema.Models.TechnikosPrietaisoPrasymas", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.KlientoUzsakymoAplankas", "KlientoUzsakymo")
                        .WithMany("TechnikosPrietaisoPrasymas")
                        .HasForeignKey("KlientoUzsakymoId")
                        .HasConstraintName("FK_TECHNIKO_TURI11_KLIENTOU");

                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.TechnikosPrietaisas", "TechnikosPrietaiso")
                        .WithMany("TechnikosPrietaisoPrasymas")
                        .HasForeignKey("TechnikosPrietaisoId")
                        .HasConstraintName("FK_TECHNIKO_TURI10_TECHNIKO");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.Pareigybe")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.Vartotojas")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.Vartotojas")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.Pareigybe")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.Vartotojas")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("AlausDaryklosGamybosValdymoSistema.Models.Vartotojas")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
